sudo: required
services:
  - docker
cache:
  directories:
    # don't install the SDK if we don't have to
    - $HOME/google-cloud-sdk
env:
  global:
    - CLOUDSDK_CORE_DISABLE_PROMPTS=1
    # lets us tag images by git commit hash, for easy lookup and storage
    - SHA=$(git rev-parse HEAD)

before_install:
  # decrypt Google Cloud secret
  - openssl aes-256-cbc -K $encrypted_da66aeabe838_key -iv $encrypted_da66aeabe838_iv -in service-account.json.enc -out service-account.json -d
  # install Google Cloud SDK
  - if [ ! -d $HOME/google-cloud-sdk/bin ]; then
    rm -rf $HOME/google-cloud-sdk;
    curl https://sdk.cloud.google.com | bash > /dev/null;
    fi
  - source $HOME/google-cloud-sdk/path.bash.inc
  - gcloud components update kubectl
  # passing auth info to SDK
  - gcloud auth activate-service-account --key-file service-account.json
  # selecting the project
  - gcloud config set project full-stack-k8s
  # selecting the region of the project
  - gcloud config set compute/zone us-west1-a
  # selecting the kubernetes cluster by name in the project
  - gcloud container clusters get-credentials k8s-cluster
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  # build containers for tests (easily do more than the client tests here)
  # - docker pull miloofcroton/react-test:latest
  - docker build -t miloofcroton/react-test -f ./client/Dockerfile.dev ./client
  # - docker push miloofcroton/react-test:latest

# run your tests
script:
  - echo tests pass
  - docker run -e "CI=true" miloofcroton/react-test npm run test

# if tests are successful, deploy
deploy:
  provider: script
  script: bash ./deploy.sh
  on:
    branch: master
